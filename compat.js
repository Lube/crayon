// Generated by CoffeeScript 1.7.1
(function() {
  var level, util, verbose, _i, _len, _ref,
    __slice = [].slice;

  util = require('util');

  module.exports = require('./crayon');

  module.exports.logger = require('console');

  verbose = true;

  Object.defineProperty(module.exports, 'verbose', {
    enumerable: true,
    configurable: true,
    get: function() {
      return verbose;
    },
    set: function(val) {
      return verbose = !!val;
    }
  });

  _ref = ['log', 'info', 'warn'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    level = _ref[_i];
    module.exports[level] = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (module.exports.verbose) {
        return module.exports.logger[level](util.format.apply(util, args));
      }
    };
  }

  module.exports.success = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return module.exports.logger.log(module.exports.green(util.format.apply(util, args)));
  };

  module.exports.error = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return module.exports.logger.error(module.exports.red(util.format.apply(util, args)));
  };

}).call(this);
